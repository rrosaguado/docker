########################################################
1#Practica 1 --> Docker Labs
1## Per arrecar el container amb ubuntu:
1 docker container run -ti ubuntu bash

1##Per veure els container que hi han:
1docker container ls -a 

1##Per fer una imatge del container:
1docker container commit ID

1##Per veure les imarges:
1docker image ls

1##Per donar-li un nom a la imatge que has creat:
1docker image tag ID name1

1## Per fer-lo correr
1docker container run -ti name1 bash

#######################################################
2#Practica 2 --> Docker SWARM
2## Crear el noode iniciant el docker swarm
2docker swarm init --advertise-addr $(hostname -i)

2##Per veure els nodes que tenim
2docker node ls

2##Descarregem el voting app del github i entrem a la carpeta que acaba de crear.
2git clone https://github.com/docker/example-voting-app
2cd example-voting-app

2##Per crear una pila de contenidors utilitzarem el docker stack deploy
2docker stack deploy --compose-file=docker-stack.yml voting_stack

2##Per poder veure el serveis de stack que tÃ©
2docker stack ls

2##Per obtenir mes detalls dels serveis podem utilitzar
2docker stack services voting_stack

2##Per veure el temps que estan corrent els 2 nodes
2docker service ps voting_stack_vote

2##Per canviar el numero de nodes que volem que utilitzi.
2docker service scale voting_stack_vote=5

2##Per poder veure els repliques que tenim podem utilitzar la comanda.
2docker stack services voting_stack

#######################################################
3#Creating a Docker Swarm
3apt-get install openssh
3apk add openssh
3##Alpine 1
3docker swarm init --advertise-addr 10.1.6.50
3docker swarm join --token worker > tockenn.sh
3scp tockenn.sh 10.1.6.91:/tmp
3scp tockenn.sh 10.1.6.59:/tmp

3##Alpine 2
3##Borres la primera lina i fas poses un #!/bin/bash.
3nano /tmp/tockenn.sh

3##Alpine 3
3##Borres la primera lina i fas poses un #!/bin/bash.
3nano /tmp/tockenn.sh

3##Alpine 1
3##Per comprobar si s'han agregat correctament.
3docker mode ls

3##Per crear 2 replicas (en aquest cas) si volem crear mes canviar el numero de --replicas.
3docker service create --name redis --replicas 2 --publish 6379:6379 redis

3##Per veure les replicas que s'ha estan executant
3docker service ls

3##Per veure els nodes i les seves ID
3docker service ps redis

3##Client
3##Per conectar-te a al servidor.
3redis-cli -h 10.1.6.50 -p 6379

#######################################################
4nano DockerFile
4FROM ubuntu:14.04
4MAINTAINER Ros
4ADD nginx_singnig.key nginx_singnig.key
4RUN apt-key add nginx_singnig.key
4RUN echo "deb http.... " >> /etc/apt/sources.list
4RUN echo "deb-src http.... " >> /etc/apt/sources.list
4RUN apt-get -y update && apt-get install -y ngix
4ADD our-page.html /usr/share/nginx/html/index.html
4EXPOSE 80
4EXPOSE 443
4CMD ["/usr/sbin/nginx", "-g daemon off;"]

4-keep-in-foreground
4--no-daemon

4##Executar des del directory on esta el docker file
4docker build . -t prova0
4docker run -p 80:80 prova0

#######################################################
5#Docker Volumes
5##Crea un nou container i el guarda en /var/lib/docker/volumes
5docker run -it -v /data --name container1 busybox

5##Crea un nou container i el guarda en la carpeta que nosaltres vulguem
5docker run -it --name container1 -v /Users:/datavol busybox

5##Utilitza els colums del container1 en el container2
5docker run -it --volumes-from container1 --name container2 busybox

5##Per poder veure a la carpeta on esta muntant els volums, en el partat de mouns ens apareixera el path.
5docker inspect container1
